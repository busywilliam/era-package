Version 2.9.1
------------------------
#small-fixes #antiviruses-heaven
[+] Replaced Tools\DEFka v1.0 with more feature rich DEFka 2.0.
[+] Replaced Virtual Pascal angel.dll stub with Delphi angel.dll stub.
[+] Added "ErmLegacySupport" option in heroes3.ini. If set to 1, compatibility with old ERM scripts will be better
    at the cost of ~15% ERM performance decrease. Options forces local variables reset before each !?XX trigger, even
    in DO-loops.
[-] Renamed Mods\WoG\EraPlugins\erm_hooker.dll to *.era.

Version 2.9.0
------------------------
#performance #erm-speed-up #erm-stability #era-evolution #recruit-dialog

[@] Special thanks to HMM 3 fans, who supported the project with donations: Andarium (++) and a few other players (+).
[@] Special thanks to daemon_n for maintaining main Russian Era all-in-one package, script writers and players support,
    Advanced Classes Mod translation and more.
[@] Special thanks to MoP. His Battery.dll plugin was used during Recruit Dialog API development.
[@] Special thanks to igrik for his constant plugins updates, advices and help.

[+] Speeded up ERM triggers in 2-10x times. There is no more performance penalty, depending on total triggers number.
    Whether there are 5 total triggers or 5000, trigger search time is almost linear. Triggers location in memory and search mechanism
    were optimized.

[!] Backward incompatible change: local variables saving and initialization is performed before the first trigger of particular type (like !?CM2)
    and restoration is performed after the last trigger of particular type. It means, that code must not depend on local vars initial zero/empty value.
    Some original WoG scripts need corrections.

[+] Rewritten trigger execution procedure. Features:
  - Up to 32 nested IFs support.
  - Each trigger/function from now has its own local set of y1..y100, e1..e100, z-1..z-10, x1..x16, f996..f1000, v997..v1000 variables.
    Flags and v-variables are automatically set before first trigger of the same type execution.
    x1..x16 usually hold trigger/function paremeters and should be changed only when you know, what you are doing.
  - Optimized !!DO support. Variables saving/restoring is performed only once before !!DO-loop and after.

[+] Rewritten !!DO implementation. Now it's lightning fast (10x), almost same as manual loop with SN:G.
  - DO parameters are set only once before the first iteration.
  - DO:P? syntax is supported. Get-parameters will have 0 value at first iteration and their final value will be returned after the last iteration.
    Example: !!DO(Test)/0/100/1:P?y1; y1 will be set to x1 value after last loop iteration, x1 initial value is 0
  - !!DO:P= syntax is not supported anymore.
  - Backward iteration is now supported. !!DO(Test)/100/-10/-1; will iterate 111 times from 100 to -10.

[+] v1..v10 and z1 variables are restored after OnKeyPressed event automatically. No keyboard fix scripts is necessary anymore.

[*] Negative y-variables are DEPRECATED and are subject to be removed in the future. Do not use them in new scripts.
    They are saved and restored for any event, except !?FU1..!?FU29999. Thus some WoG scripts used them as local variables (positive y-vars are better),
    and some scripts used them as return values from FU1..FU29999 functions (like global variables).

[+] SN:E always assigns both v1 and e1. No need to add 4 to calling convention in order to receive float result.

[+] SN:X works directly with x1..x16 now. Parameters for Era triggers are assigned to x1..x16. Thus you can write:
    !?FU(OnKeyPressed)&x1=27; handle ESC key (code 27)
    !!VRx2:S1; disable default reaction

[+] Era 1.9 was fully ported to Delphi. Angel.dll is left as deprecated stub only. Antiviruses no longer complain on angel.dll.
[+] All SN receiver commands are now handled by Era.
[+] ERM Hooker was updated to 2.1 version and is now part of Era package. Mod makers should not include it in their mods.

[+] Added new event "OnLoadHeroScreen". It occurs just before Hero Screen is drawn for specific hero: after "OnOpenHeroScreen"
    event and during each switching in the same dialog between different heroes. Event also occures during RMB on hero in tavern
    and in battle (with special plugins). The event can be used to change hero skills/info/troops only for hero screen dialog.

[+] Added "OnRecruitDlgMouseClick", "OnTownHallMouseClick" and "OnKingdomOverviewMouseClick" events. All parameters
    can be obtained via !!CM, as usual. Default reaction can be disabled.

[+] Improved SN:S / !?SN pair. Sound name is always copied to a separate buffer before calling PlaySound.
    Previously the following code used to produce no sound:

    !!VRz1:S^test.wav^;
    !!SN:Pz1;

    !?SN;
    !!VRz1:S^WTF^;

[+] OnBeforeHeroInteraction event has 3-d parameter (x3): "enable interaction". Set it to 0 to disable interaction.

[+] Added SN:F^era.dll or kernel32.dll exported function name^/...function arguments... for executing functions
    with STDCALL calling convention. No more need to use SN:L... A... E... in most cases.
    Example: !!SN:F^ReadStrFromIni^/^key^/^section name^/^Data\test.ini^/?z2;
             !!SN:F^GetButtonID^/^testBtn^;

[+] Added ERM command for dynamical string interpolation (substitution of variables in string).
    SN:I(string to interpolate)/?z#.
    Command can be used for interpolating strings, obtained from external sources, such as ini-files
    and SN:T, though its usage is recommended only for debugging/porting needs.

    Example:
    Use SN:T, UN:N6 or get input from dialog in z2.
    Example z2 contents: '%Y5 %V996 test %Z5'
    !!SN:Iz2/?z3; z3 now contains z2 contents with all variables substituted/interpolated

[*] Updated "Quick Savings" mod.
[+] Updated "wog native dialogs" plugin by igrik.

[+] Era.dll now exports 2 additional functions: GetArgXVars and GetRetXVars. Each one returns pointer to int[16].
    The first set of values should be used as parameters for generated events. They are automatically copied to x1..x16
    right on trigger execution start. The second array holds copied x1..x16 values after trigger execution and serve
    as return values.

    Example:
    GetArgXVars()[0] = 1; // default reaction is enabled
    FireErmEvent(100000); // call trigger 100000
    int defReactionEnabled = GetRetXVars()[0]; // get "default reaction enabled" parameter final value

[-] Backward compatibility with plugins, adding new ERM receivers is broken. New API for regestering custom
    ERM receiver handler is ready, only docs are missing for now.

[+] Added new receiver !!RD for managing recruit dialog and a few new events.
  
  Whenever recruit dialog is created, an event "OnOpenRecruitDlg" is triggered with the following parameters:
  x1 - selected/active monster slot (0..3)
  x2 - flags/options. Combination of bits, controlling dialog behavior:
    CLOSE_ON_BUY       = 1; Dialog should be closed, when buy button is clicked. Used normally in towns
                            ir when there is only single recruit slot. Unset this flag to force use to manually close dialog.
    AUTO_UPDATE_ADVMAP = 2; Adventure map screen should be updated after any recruit is hired (even when dialog is shown).
                            This flag is used during hiring recruits from adv. map dwellings, allowing player to see
                            new creature quantities in the right bottom info screen.
  x3 - enable dialog = 1.   Set to 0 to not show dialog at all.

  When recruit dialog is closed, an appropriate "OnCloseRecruitDlg" is trigger without parameters.
  
  When dialog slider is touched or active slot changed, recalculation of number of monsters to hire
  and total costs is performed in "OnRecruitDlgRecalc" event. All parameters can be changed.
  x1 - creature cost in gold
  x2 - resource ID (0..5) or -1
  x3 - resource cost

  Dialog was modified to allow zero gold/resource cost.

  When a few recruits are hired, "OnRecruitDlgAction" is triggered.
  x1 - number of hired creatures. Read-only.
  
  
  !!RD:C#slot/$type[/$num/$sourceId/#0 = use original number]; Configurate dialog
  ===============================================================================
  #slot - dialog slot index (0..3)
  $type - creature type to hire in specified slot or -1 for inactive slot.
  $num  - current number of creatures to hire. If the last parameter is 0, then it's original number
          of monsters to hire, remembered right after "OnOpenRecruitDlg" event (get syntax only).
          Number of creatures is usually directly binded to some source, like town creature dwelling.
          Thus, settings this value in configuration phase, you change real creature quantity.
  $sourceId - the source/memory, where available number of creatures is stored.
    >> For existing towns on the map the following sourceId formula can be used:
    Town ID * 14 + (town creature dwelling 0..6) + (7 for upgraded only), where Town ID is CA:U.
    For instance, the source of second town on the map, 3-d upgraded dwelling is: 1 * 14 + 3 + 7 = 24.

    >> If dialog is called with special, programmer-defined external sources, they will have the following IDs:
    9000, 9001, 9002, 9003. For instance, mod maker implemented custom dwelling in town and has some memory,
    where number of creatures for hiring is stored. Script writers will be able to see such sourceId as 9000.

    >> Custom source. sourceId >= 10000. User-scripted implementation.
    When custom source is used, unique memory block is allocated for it. Do not forget to set initial
    value in "OnOpenRecruitDlg" and get final (remaining) value in "OnCloseRecruitDlg".

    Same sourceId may be assigned to any number of dialog slots. All those slots will display same
    creature quantity and update simultaneously. This is usefull for alternative creatures implementation.
    Slots may have different creature types (and costs), but total amount of recuits is shared between all
    slots.

  SourceId is changed before applying new monsters number. Thus !!RD:C0/13/100/20000 will change
  sourceId to 20000 (custom) first and then set monsters quantity to 100 archangels, without changing
  original dwelling/object/etc population.

  You can set slot 0 and 3 types to some values and slot 1 and 2 types to -1. Free space will collapse and user
  will see only two slots.

  Dialogs without working slots (creature type <> -1) will not be shown.

  Example: !!RD:C2/?y3; y3 is creature type is 3-d dialog logical slot


  !!RD:S#offset; Shift slots
  ===============================================================================
  #offset - shift all slots by this value to the right (positive number) or to the left (negative number).
            If slot goes outside of 0..3 indexes, it disappears.
  Example: given 0..1 slots with normal and upgraded creatures and any sourceIds. Task: prepend two custom slots
           with angels/archangels to them.
           !!RD:S2 C0/12/2/12345 C1/13/2/54321;
           Before:
           [creatures A] [creatures B] [empty slot] [empty slot]
           After:
           [2 angels] [2 archangels] [creatures A] [creatures B]
  Shifting is performed will all settings (number, type, sourceId) preserved.

  Example 2: remove first slot with upgraded monsters and leave non upgraded only.
  !!RD:C0/?t/?t/?y2; y2 is sourceId for slot 0, t - temp global quick var
  !!VRy2:%14;        y2 - is dwelling index 0..13, 7+ for upgraded
  !!RD&y2>=7:S-1;    shift one slot to the left if the first slot is upgraded town dwelling


  !!RD:F#visualSlot/?$logicalSlot; Convert visual dialog slot index to logical one (used with !!RD:C)
  ===============================================================================
  #visualSlot   - visible slot index (0..3)
  ?$logicalSlot - logical slot index (0..3 or -1)

  Command used together with mouse handling in recruit dialog. Visible slot IDs are monotonically
  increasing and need to be converted to logical slot IDs.
  Example:
  [creature A] [empty slot] [empty slot] [creature B]
  is displayed as
  [creature A] [creature B], where creature B has visual slot index 1 and logical slot index 3


  !!RD:I?$dialogId[/?$townId/?$dwellingId/?$selectedSlot]; Get current dialog Info
  ===============================================================================
  ?$dialogId     - Unique recruit dialog ID. Used to distinguish between nested dialogs (yep, it's possible). Reusable.
  ?$townId       - ID of town, for which dialog is opened or -1.
  ?dwellingId    - ID of town dwelling, for which dialog is opened or -1. 0..6 non upgraded, 7..13 for upgraded.
                   Horde buildings (+X population) are treated as dwellings, they influence.
  ?$selectedSlot - Active logical slot index.


  !!RD:M#var/$value; Access current recuird dialog associative memory
  ===============================================================================
  #var   - either integer number or unique string. Same as SN:W
  $value - get/set/modify variable value

  Commands provide fully-featured SN:W equivalent with memory, allocated for each created recruit dialog.
  Memory is released after "OnCloseRecruitDlg" for each dialog.

  Example:
  !!RD:M^acm.mapX^/v998 M^acm.mapY^/v999 M^acm.mapZ^/v1000;
  !!RD:M^mithril^/*2;


  !!RD:O#townId/#dwellingId/#targetType/#targetId[/#dlgFlags]; Open new recruit dialog (previous dialogs will remain in the background)
  ===============================================================================
  #townId     - ID of town to open dialog for or -1. Town will be used as slots source.
  #dwellingId - ID of town dwelling (0..13) or -1. Dwelling will be used as slots source.
  #targetType - Type of the destination for hired recruits:
    RECRUIT_TARGET_TOWN   = 0;
    RECRUIT_TARGET_HERO   = 1;
    RECRUIT_TARGET_CUSTOM = 2; Destination will be determined by Lua/ERM script and handled manually
  #targetId   - ID of target: hero ID, town ID or special value for Lua/ERM script.
  #dlgFlags   - Combination of CLOSE_ON_BUY and AUTO_UPDATE_ADVMAP flags. See "OnOpenRecruitDlg" event.
                Don't set this parameter of using native/default settings.


Version 2.8.8
------------------------
[+] Added command for changing monster names/specialty text as !!UN:G1 zvar-free replacement.
    SN:H^monname^/monster ID/(0 - singular, 1 - plural, 2 - description)/text. 
    Note: get syntax works with all SN:H commands, allowing to obtain actual hint/text.

    Example:
    !?FU(OnOpenHeroScreen);
    !!SN:H^monname^/0/0/^Bug^; rename pikeman to Bug
    !!SN:H^monname^/0/1/^Bugs^; pikemen to Bugs
    !!SN:H^monname^/0/2/^Screws the game process^; change pikeman special abilities description
    !!SN:H^monname^/13/2/?z2; get archangel special abilities text
    !!IF:M^Don't hire bugs. Better higher archangel. Pros: %Z2^; display archangel advertisement

[+] Added plugin event 'OnAfterStructRelocations', occured after 'OnAfterWoG'. All game/WoG/Era structure relocations
    must be performed before it with calling corresponding RedirectMemoryBlock (OldAddr: pointer; BlockSize: integer; NewAddr: pointer)
    function. At 'OnAfterStructRelocations' event final addresses of game structures must be obtained via GetRealAddr.
    UN:C command always uses GetRealAddr and is thus safe to use default WoG/SoD addresses.

    Era uses GetRealAddr to get hero specialties, secondary skills, monster names and descriptions from now and
    will support more relocated structures in the future.

[-] Fixed MR:N bug: if dead stacks were present in position of alive stack, dead stack number could be returned.
[-] Fixed Era bug with invalid address of secondary skills descriptions table, leading to wrong SN:H behavior. Credits: gamemaster.

Version 2.8.7
------------------------
[+] Added new function and event name 'OnRemoteEvent', generating !?FU(OnRemoteEvent) on remote sides with x1..x16 arguments.
    x1 is event type, values 0..9999 are reserved by Era. ERM users may use !!FU(any func):D instead with the same functionality.

[+] Added new event 'OnEveryDay', same as !?TM[xx], but occuring every day for every player/AI without any settings and before
    all other !?TM triggers.
    Example: !?FU(OnEveryDay)&-1000; every day for any AI

[+] Added new ERM command SN:R^old resource name^/^new resource name^, redirecting lod/pac/mp3 resources to other names.
    The command is a thin wrapper over RedirectFile exported function. Pass empty name as new resource name to remove
    redirection. All applied redirections are local, stored in saved game and reverted on map exit.
    '*.mp3' redirection works on all mp3 files at once.
    
    Example:
    !#SN:R^crgrif.def^/^croc.def^; let Royal Griffins look like Rocs (portraits are not changed)

    Game unloads not used resources, thus many resources can be dynamically redirected during playing.
    If resource is used in Hero Screen, perform redirection before Hero Screen is shown (and resource is cached).

    Custom interface skins may also be implemented, allowing user to switch themes right in the game (saved game
    loading may be necessary for visual update).

[+] MP trigger and receivers were fully remade. Old documentation is not applicable now. New implementation is fully
    thread-safe. From now heroes3.ini setting "UseOnlyOneCpuCore" is 0 by default, allowing running HD mod in CPU-heavy modes.

    Documentation:

    !?MP; Trigger occurs whenever game or ERM/Lua calls ChangeMp3Theme function.
    ; Here function parameters may be changed via !!MP:S, function default reaction enabled/disabled via !!MP:R

    !!MP:C?z[xx]; Get name of current theme without mp3 extension in lower case.
    ; Receiver may be called any time. Example result: 'dirt'.

    !!MP:P[theme name]/[Don't track position = 0/1]/[Loop = 0/1]; Calls ChangedMp3Theme function and generates !?MP event.
    ; Theme name is mp3 file name without extension.
    ; If 'Don't track position' is true (1), track playing is begun from start after resuming from pause.
    ; Otherwise position is remembered and restored on resume.
    ; 'Loop' controls automatical theme replay after end. 'Don't track position' must be set to 0 in order for looping to work.
    ; ---------------------
    ; Please, note, that final parameters are fully ignored if theme with the same name is being played currently.
    ; You may need to pause current theme before starting another one to force playing from start or without loops.
    Example: !!MP:P^cstletown^/0/1; start playing looped Castle theme

    !!MP:P0/[0 - pause, 1 - resume]; Pauses or resumes current theme
    Example:
    !!MP:P0/0; Silence, please, important event will occur now

    !!MP:S[theme name]/[Don't track position = 0/1]/[Loop = 0/1]; Get/change parameters for !?MP trigger.
    Examples:
    !?MP;
    !!MP:S?z2/d/0; Make all themes non-looped

    !?MP;
    !!MP:S^mainmenu^/0/1; Play SoD main menu theme during the whole gameplay process

    !!MP:R[get/set: Enable default reaction = 0/1]; Command allows to disable theme changing at all
    ; Can be used to disallow music changing for some time
    Example:
    !?MP;
    !!MP:R0; Don't switch current theme at all

[+] Added 4 new battle events as solution to !?BR and v997 mess with full backward compatibility:
    Event: 'OnBeforeBattlefieldVisible'.
    Occurs when battlefield and stacks are ready, but not visible. Right before !?BR&v997=-1.
    WoG applies spells to stacks in this phase and inits shoot/melee/attack-n-return settings.

    Event: 'OnAfterTacticsPhase'.
    Occurs right after tactics phase or after 'OnBeforeBattlefieldVisible' event if no tactics phase takes place.
    WoG summons Santa's guardians in this phase (because now stacks are in their final positions).

    Event: 'OnBattlefieldVisible'.
    Occurs when battlefield becomes visible. Game changes theme to combat right after this phase.
    
    Event: 'OnCombatRound'. A drop-in replacement for !?BR aka 'OnBattleRound'. Occurs only for visible real rounds.
    v997 is round number. For tactics phase it starts from -1000000000. For normal phase, counting starts from 0.
    Each round v997 is increased by one, thus it can serve as always increasing unique round ID.
    Note: v997 value in other triggers may be different!

    Example:
    !?FU(OnCombatRound)&v997=0; on first non-tactics visible real round
    ; apply spells, play music, change creature attributes, etc.

[-] Fixed bug: pressing Enter/Esc in ERM error dialog showed error dialog twice.

Version 2.8.6
------------------------
[-] Fixed 'load only these scripts.txt' handling bug, when global scripts were treated as map internal scripts.

Version 2.8.5
------------------------
[+] Included Help\h3c format.txt, describing campaign file format.
[-] Restored !?MP/!!MP functionality, disabled in 2.8.4 by mistake.

Version 2.8.4
------------------------
[+] Greatly improved WoG code performance by removing functions prolog and epilog code, that was added by ZVS in debug purposes.

[+] Improved ERM errors reporting: valid file name, line and positions are displayed, as long as appropriate context. Errors reporting now
    works correctly during ERM compilation. No more double/tripple error messages. The whole receiver is skipped in case of error.

[+] Rewritten scripts loading/saving/exporting engine. Removed restriction on 100 unique ERM scripts. Previously Era used to join 99+ scripts
    into single one. A few bugs of not unloading previous map scripts were fixed. Loading saved game with the same scripts set as current one
    is now really fast and does not require ERM recompilation. It means that loading game is much faster now.

[+] ERM memory limit is extended to 128 MB. Memory is now allocated gradually as needed, saving system resources.

[+] All maps are always treated as WoG format.

[+] Scripts from map global events are now managed by Era: they are preprocessed (named functions and labels support) and can be extracted via F11
    and reapllied on F12. They are loaded before scripts from map separate directory.

[+] Each map can have its own directory in Maps. For "Arrogance.h3m" it's Maps/Arrogance. For campaign Zc2.h3c (the first map) it's Maps\Zc2_1.
    The last number is map zone index in campaign. 1 for Zone A, 2 for Zone B, etc. Custom map scripts can be put inside map directory under Data/s subpath.
    Script names can have any names, they are loaded first and do not depend on global script names. If Maps/[MapName]/Data/s/load only these scripts.txt is present,
    only those global scripts, which are written there (one name per line), will be loaded from global Data/s directory. Anyway, all map scripts will
    be loaded in the first place. Map scripts are stored in saved game, can be reloaded, extracted, can use named functions and labels.

[+] All language Lang/*.json files are loaded from map directory (ex. Maps/Arrogance/Lang/arrogance.json), stored in saved games are applied. Thus
    maps can be supplied with translatable language data.

[+] WoG Option 5 (Wogify) meaning was changed for both map start or scripts reloading via F12:
    - 0: don't load any global ERM scripts (previously - load global ERM scripts for maps with 'RANDOM MAP' like name);
    - 1, 2: always load global ERM scripts, unless map forces other value;
    - 3: load global ERM scripts, but if map has its own scripts and does not force fixed set of global scripts,
      ask user, whether to skip global scripts loading or not.

    If there exists "Maps/[MapName]/Data/s/load only these scripts.txt" file, then global scripts specified in the file are loaded without confirmation
    and WoG Option 5 is set to "2".
    If user choses to skip or load global scripts in confirmation dialog, WoG Option 5 is changed to either 0 or 2.

    Summary:
    - Backward compatibility with existing maps/scripted campaigns is preserved. They usually set !!UN:P905/0 (disable wogification), which
      disables global ERM scripts loading.
    - Because all maps are now treated as WoG Format, option 1 is the same as option 2.
    - Scripts reloading via F12 always honor the option.

[+] Scripts from WoG Campaigns were fixed and extracted to separate directories. Bug fixes applied.
New service for scripts extraction was published: https://tools.bsoft.parkingby.icu/scripts-extractor/

[+] UN:J3 command was improved. Specify ':clear:' option instead of file name to turn off all WoG Options and set Map Rules to "use selected below".

[+] Added UN:J13 command. It resets commanders, according to current WoG Options 3 and 6.

[+] Added missing descriptions for old Era events:
  !?FU77012 = !?FU(OnStackToStackDamage). Occurs when damage dealt by one stack to another stack is calculated.
  SN:X parameters:

  ATTACKER            = 0; (attacker stack)
  DEFENDER            = 1; (defender stack)
  FINAL_DAMAGE_CONST  = 2; Do not change
  FINAL_DAMAGE        = 3;
  BASIC_DAMAGE        = 4; Normal basic damage
  DAMAGE_BONUS        = 5; Damage bonus (caused by attack-defense difference, cavalry bonus or any custom bonus)
  IS_DISTANT          = 6; (0 for melee, 1 for distant)
  DISTANCE_ARG        = 7;
  IS_THEORETICAL      = 8; (0 for real damage, 1 for estimated damage)

  !?FU77013 = !?FU(OnAICalcStackAttackEffect). Occured when AI calculates the effect of attacking stack
  SN:X parameters:

  ATTACKER            = 0; (attacker stack)
  DEFENDER            = 1; (defender stack)
  EFFECT_VALUE        = 2; (final effect)
  EFFECT_VALUE_CONST  = 3; Do not change

[+] Added "fix wog exp screen.bin" memory patch by igrik. It fixes column headers display in creature experience screen.
[+] Splice and HookCode API was improved. Added support for custom extra argument and multiple calling conventions.
[*] Savegames format was changed and is not compatible with previous Era versions.
[-] Disabled "Failed to create Debug\Era\log.txt" message if several game instances are running.
[-] Fixed UN:P3 command. Enabling/disabling commanders now enables/disables commander chests too.
[-] Mapname.erm and Mapname.cmd are not loaded anymore.

Version 2.8.3
------------------------
[+] Added "LoadImageAsPcx16" to era.dll export and SDK. Function allows to load png/jpg/bmp image with
    optional scaling as pcx16 game resource, suitable for replacing native resources or displaying in dialogs.
    All HD Mod modes are supported.
[+] Improved syntax of language json files (Mod\Lang\*.json, UTF-8 encoding). Nested objects are supported.
    {
      "wogrev": {
        "no_gold_message": "The is no more gold, @name@!",
        "no_mercy":        "There will be no mercy!"
      }
    }

    The above mentioned document is treated the same as:
    {
      "wogrev.no_gold_message": "The is no more gold, @name@!",
      "wogrev.no_mercy":        "There will be no mercy!"
    }

    but allows to skip duplicating "messages." prefix.

    ERM example: !!SN:T^wogrev.no_gold_message^/?z2/^name^/^Geralt^; !!IF:M^%Z2^;
[+] Hints from Mod\Data\Buttons\*.btn files are now automatically translated. No need to include *.btn files in localizations.
[+] Added translation support for plugins. SDK function "tr", accepting complex key and vector of named parameters.
    Example: ShowMessage(tr('mymod.greetings', { "hero_name", "Orrin", "age", IntToStr(70) }).c_str());
[+] Added state-less re-enterable thread-safe functions for splicing and hooking: "Splice" and "HookCode".
[+] Added function NotifyError, that shows Windows dialog with error, but does not terminate
    application, unless AbortOnError ini option is set to 1.
[+] Added "no high level prisons on random maps.bin.off" patch. It disables generation of prisons with 2+ level heroes on random maps. Credits: igrik.
[+] Updated "WoG Native Dialogs" integrated mod. Commander screen visual improvements applied. Credits: igrik.
[*] Updated "Quick Savings" mod. Language json file now uses improved syntax.
[*] Updated "Secondary Skills Scrolling" mod. Moved button hints to language json file.
[*] Updated era.h, removed garbage and not supported signatures.
[*] *.ert/*.txt translations are DEPRECATED. New Lua/ERM scripts should not use it, unless there is a substantional necessity.
    Use SN:T for ERM, Era::tr for C++ Plugins instead.
[*] Updated vfs.dll to v1.0.4.
[*] *.era and *.dll plugins loading mechanism was improved. *.dll and *.era plugins are treated the
    same way, except that "*.dll"s are loaded right before "OnAfterWoG" event. and "*.era"s are loaded right
    before "OnBeforeWoG" event. Zero size files are skipped. In both cases v1 variable is set to era.dll
    handle for compatibility reasons only (this behavior is DEPRECATED). If plugin with the same name,
    but different extension is present (say, 'x.dll' and 'x.era'), an error is reported.
[*] Fixed crash in buttons.dll by MoP. Invalid counter initialization caused crash if only single button was registered.
    Added .dbgmap file for updated dll. Updated code to install hooks in OnAfterWoG event and renamed plugin to buttons.era
[-] Unsafe SN:C and SN:R commands were removed and are not supported anymore.
[-] Removed outdated or unsafe functions from angel.dll exports.
[-] The following Mods are not installed automatically and may be removed from main package any time: Yona, Fast Battle Animation, Quick Savings, Secondary Skills Scrolling.
[-] Era does not apply *.bin patches from EraPlugins directory anymore. Patches from EraPlugins/BeforeWoG and EraPlugins/AfterWoG directories are still applied.
[-] Fixed bug, introduced in v2.8.2: dll plugins with double extensions were ignored.

Version 2.8.2
------------------------
[+] Updated WoG Native Dialogs. Commander dialog was fully rewritten. Less bugs, performance boost. Credits: igrik.
[+] Added updated Tools\ExeMapCompiler php utility to convert *.map files into Era's *.dbgmap format.
    Decompilation is supported. Supports maps, generated by Delphi, Virtual Pascal and Visual Studio.
[+] Added Tools\VfsTest utility to run tests for virtual file system compatibility with current OS.
[*] Added extra check in angel.dll to not load plugins with double extension like *.dll.off.
[*] Loaded *.dll plugins by angel.dll now receive v1 = hEra during DLL_PROCESS_ATTACH event and thus
    do not crash if *.dll plugin is renamed *.era plugin.
[*] DEPRECATION. New versions of plugins MUST use updated era.h and not rely on v1 = hEra in DllMain. Updated era.h accordingly.
[*] Included WoG Native Dialogs sources in main package.
[-] Fixed bug: Virtual File System worked unreliably on Win 10 v1709+, because NtQueryDirectoryFileEx was not handled.
[-] Fixed bug: reports for addresses from debug maps were sometimes invalid.
[-] Removed garbage files from the previous release.

Version 2.8.1
------------------------
[+] Option CPUPatch was replaced by CpuTargetLevel (value 0..100), defining desired level of CPU load. Real CPU loading decrease is usually
    greater than option value. 0 (almost not CPU loading in idle mode, but with possibly a bit not responsive interface or jerky mouse movement).
    100% — regular game mode (waste of CPU time and battery).
[+] Integrated latest WoG Native Dialogs mod by igrik.
[+] Tools\installmod.exe utility was updated to support new UTF-8 format of Mods\list.txt file.
[+] Added char* GetEraVersion exported function.
[+] Added event 'OnReportVersion' for important plugins and Era. Added void ReportPluginVersion(char* VersionLine) API to era.dll.
    It's now possible to view Era and important plugin versions via right mouse button on Credits button in main menu.
[+] Added option 'Debug.DumpVirtualFileSystem'. If true, all virtual file system mappings are written in log.txt on game start.
[+] Added full set of English texts and gui resources to enforce language of core WoG mod.
[*] Added support for 'modlist' command line argument to map editor.
[*] Restored obligatory mod list report in log.
[*] Updated 'numeric creature stats.era' plugin by igrik. No more dependency on VC++ Redistributable anymore.
[*] Updated patcher_x86.dll by Baratorch to 4.5.4.
[-] Fixed bug: not all virtual files and directories were correctly mapped. Updated vfs.dll to 1.0.2.3 version.
[-] Fixed bug: some Era exported API used non-stdcall conversion and pointer to internal routines, rather then special wrappers.
    This would cause immediate crashes in any plugin, that would try to use them.

Version 2.8.0
------------------------
[+] Fully redesigned and rewritten Virtual File System code, the core of Mods system. Added full concurrency and Unicode support.
    Developed with Windows XP, 7, 10 and Wine in mind. Lua's 'script not found' problem is solved.
[*] (Internal code) Wrote patch/assembling module, implementing 70-80% of core patcher_x86 features, but with thread-safety. Fixes real crashes in parallel mod in game and map editor.
[*] (Internal code) Improved Era's logger implementation: added better concurrency support and recursion protection. Reduces potentional crashes.
[*] (For plugin makers) DisableThreadLibraryCalls is no more called for plugins.
[*] Era is now compiled in optimized mode.
[-] Fixed bug: Named functions (FU(XXX)) dictionary was not cleaned on new map start, but function automatical ID used to be reset. Thus any further scripts reloading via F12 used to create function ID collisions if scripts contained new function names.
[-] Fixed bug: Era's memory manager worked in single-thread mode (IsMultiThread = false), which could cause unpredictable crashes in all previous Era versions.
[-] Fixed crash if Debug\Era directory was not created or could not be created.

Version 2.7.7
------------------------
[+] Included WoG 2005 sources in Tools\WoG Sources.
[-] Fixed WoG bug, causing many crashes (invalid underground detection), when HD mod was enabled. MixedPos function will now drop higher order bits and not treat them as underground flag.

Version 2.7.6
------------------------
[-] Fixed WoG bug: !?BA0 and !?OB54 could return level 1 (underground) for ground from time to time. Many scripts used to crash because of it.
[-] Fixed WoG bug: double !?OB54 event generation when attacking without moving due to Enter2Object + Enter2Monster2 calling.

Version 2.7.5
------------------------
[-] Fixed lua scripts search path settings.

Version 2.7.4
------------------------
[-] Small fixes in installer and game engine.

Version 2.7.3
------------------------
[-] Temporarily disabled WoG Native Dialogs mod until further testing and stability improvements.
[-] Temporarily turned off Unicode support for VFS due to crash reports and performance degradation in Map Editor.

Version 2.7.2
------------------------
[+] Added more Unicode API support for virtual file system.
[*] Updated patcher_x86 to the latest version from HD mod.
[*] Added heroes3.ini support for map editor.

Version 2.7.1
------------------------
[-] Fixed 2.7.0 nightly build bugs. It's recommended to delete manually Big Spellbook mod and install the updated one from wakeofgods.org/mods/ if Era is installed over previous 2.6.X version.

Version 2.7.0
------------------------
[+] (***) Added early support for Lua scripts (luajit engine). The API is [EXPERIMENTAL] and is subject to be changed. (***)
ERM will be fully supported, but is considered DEPRECATED from now. No new ERM commands (except integrating existing plugins)
are planned. Further development is binded to Lua. Single language can be used to write ordinary and plugins-like scripts.

[+] Added early support for loading any image as ingame pcx.
[+] Added support for kernel32.OpenFile function in virtual file system module. Fixed bug with black battlefield backgrounds.
[+] Added 'OnAfterCreateWindow' event for plugins.
[+] Added 'dfault24.pcx' to hmm35wog.pac, default image for missing pcx16 resources.
[-] Updated WoG Native Dialogs plugin. Fixed cursor disappearing in IF:G dialogs. Author: igrik.
[-] Big Spellbook mod by MoP is updated and extracted from main package.
[-] Fixed broken un44.def.

Version 2.6.6
------------------------
[*] Updated WoG Native Dialogs mod by igrik: removed VC++ dependencies, fixed a few bugs, added WoG-like radio/checkbox-buttons for IF:G.
[*] Removed VC++ dependencies from Game Bug Fixes plugin. Plugin renamed to *.dll version to prevent crashes at game start.
[-] Fixed bug with crashes during sound playing in WoG dialogs. patcher_x86 thread-unsafe hook replaced with native Era hook.
[-] Assertion messages were not displayed, only files and lines used to be reported.

Version 2.6.5
------------------------
[+] Integrated igrik's plugin, displaying numeric value of moral/luck bonuses and spells duration in view creature dialog. 
[+] Improved "wog native dialogs" plugin by igrik. IF:G radio/checkbox dialog is now implemented via native ingame dialogs system.
[+] Added "fast upgrade stacks in town.dll" plugin by igrik in the off state. Plugins allows to use A+LMB combination to instantly upgrade single stack or all stacks (click on hero portrait) in town without any confirmations.
[-] Fixed bug in Mod Manager, not allowing to run executables with space in name like "h3era HD.exe".
[-] Fixed bug with crash in commander's dialog on skill selection during level-up.

Version 2.6.4
------------------------
[+] Updated igrik's "Native WoG Dialog" mod, fixed bugs in creature info display in battles, optimized defs.
[+] Refactored Map Editor, fixed crashes on exit.
[+] Added Visual C++ Redistributable libraries msvcr[90..120].dll to allow plugins to be executed on all systems.

Version 2.6.3
------------------------
[+] Integrated "Microsoft Visual Basic 6.0 Common Controls" in order to solve problems of people, running editor without required libraries installed.
[+] Integrated igrik's WoG Native Dialogs mod, replacing commander and creature experience dialogs with native dialogs (fast, no blinking, HD mod support, ALT+F4 support, resources in pac, etc.).
New lines were added to "zcrexp.txt" and "znpc00.txt". They need to be translated and added to localization mods, such as WoG Polish or WoG Rus.
[+] Updated "Quick Savings" mod: exposed named functions and events to outer world. Mods over the mod can be made now.
[+] Added visible errors notification, like invalid json files.
[*] Replaced Era Start Menu icon.
[-] Removed all graphical elements, ported from Hota.

Version 2.6.2
------------------------
[+] Added localization support for ERM scripts. All Lang\*.json files are loaded and merged into single dictionary of key => value pairs with language data.
Json files must be saved in UTF-8 encoding with preferably Unix line endings (#10 = 0x0A). The format is the following:

{
  "unique global key": "translation",
  "another key": "another translation"
}

During file loading text is converted from UTF-8 (Unicode, i.e Russian, Polish, Chinese and any other language is supported) into ANSI-encoding, used by player's operational system, ex. Windows-1251.
Thus you may ship the translation, other people may open and edit it without loss and characters, not representable on particular PC, will be replaced with "?".

Real example:

{
  "eqs.this_day_savegame_name": "@day@_@player@",
  "eqs.end_turn_autosave_name": "@day@_@player@_End",
  "eqs.quicksave_name":         "@day@_@player@_Quick",
  "eqs.saved_msg":              "Saved!",
  "eqs.quicksaved_msg":         "Quicksaved!"
}

It's recommended to prefix each key with string, unique for mod or author, like "pm." for "Phoenix Mod".

Translations may have parameters in the form of "@parameter name@". Those parameters are replaced with actual values during translation.
New ERM command !!SN:T is used to translate strings by key.
!!SN:T(key)/?(z-variable to place result to)/(parameter name 1)/(parameter value 1)/(parameter name 2)/(parameter value 2)...;

Example:

!!OW:R-1/6/?y1; y1 - player's gold amount
!!SN:T^test.gold_amount_report^/?z2/^gold^/y1;
!!IF:M^%Z2^; prints "You have 12850 gold left. Not bad!"

my test.json:

{
  "test.gold_amount_report": "You have @gold@ gold left. Not bad!"
}

[+] Added possibility to set secondary skills texts without z-variables dependence. SN:H^secskill^/skill 0..27/0 (name) or skill level/new hint.
[+] Added GET-syntax for all SN:H commands, allowing to get previously set hint for objects or current skill/specialty texts for heroes.
[+] v1-v10 and z1 will be restored after (OnKeyPress) event to the value, they had before event.
[+] Added fixes by Algor for 30 wog - enhanced secondary skills.erm, 75 wog - secondary skills boost.erm and 78 wog - wogify.erm. No more hardcoded numbers, !!SS is used instead.
[+] "Quick Saving" script is converted into default standalone mod, using named functions, unique SN:W variables and Era 2.6.2 localization means. Mod is now compatible with almost any other mod.
[+] Added msvcr90.dll (Microsoft Visual C++ Redistributable 2009) to support plugins, written with this dependency.
[+] Added meaningful messages to many asserts in code, making assertion crashes easier to understand.
[*] Each *.bin patch obtains unique name prefix, no more conflicts with 'no hota maps.bin', shipped with HD mod.
[*] Yona creature abilities are now off by default and need to be manually switched on via mod ini file.
[-] Fixed bug: SN:H^object^/x/y/z/hint didn't update hint.
[-] Removed Jim Vogan's scripts from WoG mod.

Version 2.6.1
------------------------
[+] Added latest Mod Manager by SyDr, updated default mods.
[+] Added no hota maps.bin patch, fixing crash when Hota is installed in the same Heroes 3 directory.
[+] Added "game bug fixes.era" plugin by RoseCavalier:
- AI can't cast Town Portal on Cursed Ground;
- AI can't cast Fly if they don't have it;
- Show Subterranean Gates / Monoliths icons on 'View World' and 'View Air';
- 65535 objects patch by AlexSpl;
- AI split divide by 0 fix;
- Repair Arena Cancel button;
- Show Forcefield Shadow;
- AI Resurrection-freeze bug;
- > 32767 creatures patch.
[+] Integrated Big Spellbook mod by MoP.

Version 2.6
------------------------
[+] Added default values for most of heroes3.ini parameters. No crashes anymore on missing values or even missing heroes3.ini.
[+] Added 'default era settings.ini', which values are used if corresponding parameters are missing in heroes3.ini.
[+] Backported saved game sections debugging capabilities with "Debug.DumpSavegameSections" ini option.
[+] New directory "Debug\Era" must exist in order for debug functions to work (is automatically created and game start).
[+] Backported dump event list, dump patches, dump erm memory and dump PE modules capabilities from 2.5x branch (F11 key).
On calling Era.GenerateDebugInfo (no parameters), pressing F11 or game crash Debug\Era folder is filled with various files,
containing full necessary debug information. Report generation can be carried out on demand:

!!SN:L^era.dll^?y1 Ay1/^GenerateDebugInfo^/?y2 Ey2/0/0; generate debug information, including ERM tracking info

[+] Functions can now have names. Any time you use "(something)"" inside commands, a new function number from 95000+ range is associated with text inside brackets and brackets with name are replaced by that number. If the name already has associated function number, existing number is used instead. Use SN:W to get number of named function by name. Unnamed functions are deprecated, but still working.

Example: !!FU(OnHenchmanHire); call function which maybe does not exist, but script users will be able to handle the event.
Example: !?FU(Phoenix.FindFreeSlot);

Please, don't forget that names are global. Prefix function names with mod abbreviation: (BattleLib.RessurectStack).
Function names are replaced with numbers during map initialization stage, so this feature has no impact on performance.

[+] Added labels support. Label is command ordinal number inside current trigger starting from 0. [:LabelName] defines local label. [LabelName] means replace label with command number. Labels are used with SN:G command to implement loops and conditions.

Example of simple loop:

!!VRy1:S0; initialize counter
[:loop]; loop is label name inside current trigger (!?XX until next !?XX of the same file)
!!IF:L^Echoed %Y1 times^; echo message
!!VRy1:+1; increase counter
!!SN&y1<7:G[loop]; jump to loop label if not echoed 7 times

Example 2:
!?CM2; archangel in every slot
!!VRy1:S0;
[:loop]
!!HE-1:C0/y1/13/1;
!!VRy1:+1;
!!SN&y1<=6:G[loop];

[+] Added elseif syntax to !!el command. If !!el has condition and condition evaluates to false, the engine proceeds to the next !!el command until finds the right one or meets !!en.
[+] Added !!SN:O command. Get object entrance. SN:O?$/?$/?$
Initialize any three variables with object square coordinates. Pass them to command to update coordinates with right object entrance square. Thanks to gamecreator.

!?CM0;
!!CM:R0 P?y1/?y2/?y3;
!!VRv2:Cy1/y2/y3;
!!SN:O?y1/?y2/?y3;
!!IF:M^%V2 %V3 %V4 => %Y1 %Y2 %Y3^;

[+] Added function names for default ERM events without parameters and new Era triggers. Ex.: !?FU(OnBattleRegeneratePhase)
!?FU77001 = !?FU(OnSavegameWrite)
!?FU77002 = !?FU(OnSavegameRead)
!?FU77003 = !?FU(OnKeyPressed)
!?FU77004 = !?FU(OnOpenHeroScreen)
!?FU77005 = !?FU(OnCloseHeroScreen)
!?FU77006 = !?FU(OnBattleStackObtainsTurn)
!?FU77007 = !?FU(OnBattleRegeneratePhase)
!?FU77008 = !?FU(OnAfterSaveGame)
!?FU77010 = !?FU(OnBeforeHeroInteraction)
!?FU77011 = !?FU(OnAfterHeroInteraction)
!?FU77012 = !?FU(OnStackToStackDamage)
!?FU77013 = !?FU(OnAICalcStackAttackEffect)
!?FU77014 = !?FU(OnChat)
!?FU77015 = !?FU(OnGameEnter)
!?FU77016 = !?FU(OnGameLeave)

[+] Added SN:H command for setting hints, descriptions, names without z-vars. Currently only the following variants are supported:
SN:H^object^/x/y/z/hint;
SN:H^object^/obj_type or -1/obj_subtype or -1/hint;

[+] Fixed !!FU:P?x[n] bug. Now this syntax works ok.

[+] Added SN:H subcommand "spec" for applying custom hero specialty names.
SN:H^spec^/hero/short name (0), full name (1) or description (2)/hint

[+] Added ability to delete hints set up by SN:H. Just add "-" prefix to the first argument.
SN:H^-object^/...

[+] Better support for modern HD mod and x86_patcher:
- included x86 patcher v4.3 with debug map file;
- 95% of Era's patches use x86_patcher, each *.bin file creates its own patcher instance;
- x86_patcher patches are dumped to "Debug\Era\x86 patches.txt" during debug info generation.

[+] Implemented support for multiple UnhandledException handlers, now both HD and Era handlers do their job.

[+] Implemented fully featured ERM tracking support: track all executed triggers and commands in order to defeat bugs and learn game mechanics.
See Debug.ErmTracking.* options in "Heroes 3\default era settings.ini".

All ERM triggers and commands are recorded during execution (tracked) and are dumped to single "Debug\Era\erm tracking.erm" file in the order of execution.
Comments after each trigger show flags and v-variables state on trigger start/end.
Comments after each receiver show exact file, line and position of command.

Tracking report file is generated on F11 press or on game crash.

[+] Improvated named functions support. Added programmatical ability to get function name by ID.

[+] Improved multiplayer support:
- The whole packed saved game is sent on end of turn, difference file is not generated.
- Added object creation immediate synchronization between servers and clients.
- "SavedGameExtraBlockSize" ini setting is dropped.

As a result, playing game with script, that support multiplayer, can be performed without crashes.
WoGification and quick saving scripts work.
  
[+] Released ERM Hooker v2.0 plugin with support of multiple handlers at the same address. It support Era 2.46,
but is DEPRECATED in advance, because the same functionality without memory leaks will be ported to Era in
future versions.

[+] F11/crash dumps loaded mods to "Era\Debug\modlist.txt".

[+] Added support for compiled debug maps for dll/exe files and basic set of compiled maps. Map files are used to find corresponding name of function/variable/class by address in executable code. This feature allows to display human readable crash report in terms of source code items, not meaningless addresses.

Use Tools\ExeMapsCompiler\compile.phc to convert Borland map files to *.dbgmap binary files, used by Era.
The tool requires PHP interpreter v7.1+ to run. C++ maps support is planned to be added soon.
Place *.dbgmap file with the same name, as executable/dll but with capital first letter to Heroes 3\DebugMaps directory.
Debug maps are loaded automatically during debug information generation.

[+] Implemented generation of detailed crash report on game crash, including data analysis.

[+] Updated Yona mod: added "Hammer Crush" ability for dwarfs.

[*] Ported igrik's code to fix SN:D in heroes meeting screen.
[*] Removed deprecated triggers from Era as long as deprecated RecallAPI function.
[-] Fixed bug with combined artifact (# > 143) dismounting in heroes meeting screen.
[-] UN:J3 patch rollbacked for backwards compatibility reasons.
[-] Fixed ERM MR:N bug. !?MR1/2 return valid stack number or -1.
[-] Fixed bug with dispell in enemy spellbook and 1-turn spell durations of friendly hero.
[R] (Removed) UN:J3 command does not reset commanders anymore. If value ":clear:" is passed as file name, all WoG options are dropped to zero and option #101 (Map Rules) is set to 2 ("use selected below").

...and more...


Version 2.47.0  May, 08 (2015)
------------------------
[*] Improved !!PO command stability, fixed bugs.
[*] ExecErmCmd can process multiple commands, separated by ';'. Semicolon in the end of passed string is optional now.
[+] Changing final physical damage, received by battle stack, via MF:F is now correctly displayed in battle log (including damage from towers, moat, fire shield, etc).
[+] Added possibility for global and local MP3 tracks redirection. Simply specify file name with mp3 extension as resource or *.mp3 mask to redirect all tracks.
[+] Added possibility to redirect resources globally via JSON files.
Data\Redirections\*.json

Format:
{
  "old resource name": "new resource name",
  "old resource name": "new resource name"...
}

Folder "Data\Redirections\Missing\*.json" works in similar way, but redirections are only applied to missing resources.
For instance, we can now delete z*-pictures from WoG and redirect them to original names without prefixes. You can also supply safe alternative to third-party resources, if your mod depends on any graphical mod.

[+] Added OnGameEnter (77015) and OnGameLeave (77016) events. The first one occures when game is started or loaded and user gains control over mouse cursor. The second one occurs, when user exits to main menu or desktop.

This pair of trigger is handy to set/unset UN:C hacks, which are specific for map or mod.


====== The development was split into 2.4X and 2.5X series ======


Version 2.55  October, 13 (2013)
------------------------
[+] Routine producing ERM error report was completely rewritten. New dialog uses colored text and displays full error command, ERM file name and line in file. Default choice is skipping the error, not making ERM memory dump. There are no more duplicate or senseless error popups.
[+] Routine making ERM memory dump was completely rewritten for better error diagnostics and supports apart from all associative variables (SN:W) and dynamical arrays (SN:M).
[*] Error in any Era command (SN:) does not lead to leaving trigger anymore.
[*] Era commands now obey error suppression rules (UN:P904) and do not change z1 variable on error.
[+] ExecErmCmd can now execute several commands at once.
[+] Added event "OnBeforeClearErmScripts". It occurs right before scripts are unloaded.
[+] WoG built-in code tracing mechanisms were removed because of being slow and useless.
[+] e- and y- are considered deprecated and are subject to remove in the future.
[*] "r" color name now stands for light red, suitable for default dialog backgrounds. "g" color name now stands for game native gold color.
[*] Internal code refactoring.
[+] Added comprehensive exception handling with various contexts dumping.
[-] Fixed ERM MR:N bug. !?MR1/2 return valid stack number or -1.
[-] Fixed Era 2.5 bug. Event "OnBeforeErmInstructions" didn't occur.


Version 2.5  October, 2 (2013)
------------------------
[*] No more "wogification" notion on code level. Every map is WoG map. Scripts are loaded the same way for any map/campaign. WoG option #5 is free. Wogification settings (option #5) are ignored.
[*] Map/campaign built-in scripts are not interpreted.
[-] Bug with garbage triggers from previously run map with built-in scripts is gone.
[*] Maps\[map name].erm is not loaded.
[-] Bug with memory corruption when both [map name].erm and built-in scripts presented is gone.
[-] Bug of Maps\[previously run map].erm script loading on campaign start is gone.
[*] UN:J3 command does not reset commanders anymore. If value ":clear:" is passed as file name, all WoG options are dropped to zero and option #101 (Map Rules) is set to 2 ("use selected below").
[+] WoG default storage for ERM scripts is not used anymore. No restriction on 100 script names remains. Scripts are loaded and interpreted after all WoG data is loaded but before "OnSavegameRead" event occurs. As a result, Era 2.5 cannot handle saved games of previous versions.
[+] Each script is stored in saved game with additional information: file name, file size and CRC32 checksum. No scripts interpretation occurs on game loading if the same script subset is already in memory. It means that game loading speed was significantly increased.
[+] Files "Data\s\*.erm", "Data\s\*.ert" and "Data\s\load only these scripts.txt" in Maps\[map name] or Maps\[campaign name]_[campaign map index] folder override the appropriate files in "Data\s" and "Mods\[any mod]\Data\s" only when this particular map/campaign is started. It means that every map, including maps in campaigns, can have unlimited number of own scripts and can flexibly control the script and language file subset which will be used.
[*] The order of file names in "load only these scripts.txt" does not matter. If file names contain priority prefixes, they are taken into account.
[+] "*.sys.erm" scripts are called System scripts and loaded always regardless "load only these scripts.txt" settings. System scripts usually provide support for critically important game aspects and should not contain any code which can be used optionally depending on custom map demands or player's preferences.
[*] Maps\[map name].cmd is not loaded.
[*] WoG.ini option "Alternative Scripts Location" is not used.
[+] Scripts preprocessing is not used. Invalid ERM receivers in form of "!!XX" remain. New option "IgnoreInvalidReceivers" was added to heroes3.ini. If it's on, invalid receivers are silently ignored. Otherwise new diagnostics message appears with the following information: invalid receiver, file name, linear offset in file, error context.
[+] Added new triggers OnGameEnter (77015) and OnGameLeave (77016). The first one occurs when map is loaded and player gets mouse control. The latter occurs when player leaves current game. This event can be use to revert special changes in game memory (like UN:C hacks).
[+] Implemented redirection support for *.mp3 files using functions "RedirectFile" and "GlobalRedirectFile". This mechanism should be used instead of deprecated !!MP commands. Calling redirection functions with first argument "*.mp3" forces playing only one mp3 track in all game dialogs.


Version 2.46  July, 10.
------------------------
[+] Era can be installed on SoD/Complete/WoG/Era.
[+] Almost full WoG Editor support for Era mod system.
[+] Added new Mod Manager by SyDr. Install mods safely using buttons "Add new" or simply by drag-n-drop.
[+] Added full color Chinese GB font support.
[+] Added animated trees patch by Valery.
[+] Added patcher_x86.dll and wog_patcherizer plugin by baratorch.
[+] Era tries to automatically turn DEP off if possible.
[+] ERM trigger CM3 now handles all clicks.
[+] Added SN:D command. It's used to redraw hero, heroes meeting, adventure map and town screens.
[+] Added new modifier syntax for SN command parameters:
  SN:X$ (without &), SN:M#/$, SN:M#/#/$, SN:W#/$.
  Traditional "d" adds 0 or empty string, d[...] is equivalent to d+.
  d+, d-, d*, d:, d& (string concatenation).
  Example: !!SN:W^Gold^/y1 W^Gold^/d-500 W^Gold^/d*11 W^Gold^/d:10; Gold = y1 -500 * 1.1

[+] Added option "UseOnlyOneCpuCore". By default Era uses as many processor cores as possible.
[+] Added option "FixGetHostByName" to heroes3.ini. If it's on, Era tries to select best external IP for network gaming.
[+] Added option "SavedGameExtraBlockSize" to heroes3.ini. Set it to high enough value to reduce network crashes.
[+] SMACKW32.DLL was updated to version 4.04e.
[+] Added "stack experience bonuses.txt" from WoG 3.58f to Help folder.
[*] Virtual file system was improved for better stability and compatibility with Windows 7+ and Linux (Wine). All hooks are now optional (heroes3.ini).
[*] Applied fixes for WoG mod by Algor.
[*] Numerous small changes in the package.
[-] MP3 trigger was removed from ERM due to concurrency bugs.
[-] Applied fix by MoP to "transfer last stack.bin" patch. From now the last stack does not lose experience when being transfered.


Version 2.4  August, 31.
------------------------
[+] GrayFace's patch for editor was updated. Passability editing dialog now understands mod system.
[+] Fixed battle hint and log for modified by ERM damage from towers, moat and magic.
[+] Added fix for handling of negative offsets in fonts. Author - Sav.
[+] Added ERM scripts preprocessing. A sequence of three and more exclamation characters is treated as a comment and cut from source code at loading. Old WoG maps will not show error dialog at start.
[+] Added fixes for fire elemental and hell baron by Bes.
[+] Added "all war machines in blacksmith.dll.off" plugin by baratorch. It allows to buy all machines of war in blacksmith.
[+] Fixed WoG campaign error.
[+] Updated ERM UN:V command. WoG version is 400 now, ERM version is Era version * 1000.
[+] MMArchive was updated by Chinese programmer to support *.pac extension.
[+] File "era.h" was updated and now supports MSVC 9. Author - Sav.
[+] Added text tables editor by GrayFace.
[+] Commanders and emissaries are displayed in editor.
[*] Mod list generation mechanism was changed to a fully portable variant. Game loads mod list from file "Mods\list.txt" now. The lower the mod is in the list, the higher its priority is. Duplicates and blanks are ignored, as well as not existent items. Mods which are not mentioned in the list are considered disabled.
[*] Mod manager, plugin manager and Era Start Menu were updated.
[*] Jim Vogan's scripts were updated, some of them received options in WoG menu.
[*] Emerald tower can be visited only once, as it was in original 3.58f.
[*] InstallMod was updated to satisfy the requirements.
[-] Fixed a critical bug in era.dll. If any mod folder had attributes, it was not added to mod list at game start.
[-] Fixed OnBattleMouseHint event. If player has detailed statistics off in battle options, damage arguments are set to -1.
[-] Fixed and improved logging.
[-] Fixed problem with Yona and "0 (0)" battle hint.
[-] Fixed Era 1.81..Era 2.4 code used to modify memory blocks.
[-] Fixed bug in text scanner. No more hangs because of colored strings if the form of "{~...}...{~".
[-] Fixed bug in secondary skills boost. Credits: Valery.


Version 2.3  June, 10.
----------------------
[+] Added support for negative z, e, y variables to all Era commands.
[+] Added DL-Dialogs editor by GrayFace. It's tool #16 in Era Start Menu.
[+] Added fixed snow objects for adventure map.
[+] Added updated lakes by Darkloke.
[+] Added support for "no secondary skills limit" patch to "battle academy" and "school of wizardry" scripts.
    Author: majaczek.
[*] Era Start Menu now displays current page number in title.
[*] If duplicates are found in zeobjts files, map editor reports error instead of crashing.
[*] Plugin "all war machines in blacksmith.dll.off" is considered deprecated and was removed.
[-] Fixed avwattak.def which caused rare crashes.


Version 2.2  May, 29.
---------------------
[+] Added Era Start Menu tool (Tools\Era Start Menu\start.exe). It allows to open most used game executables, utilities and help files via single mouse click.
[+] Added functions for resource files redirection (fnt, pcx, txt, def, etc.). Local redirections are stored in saved games
and applied on loading. Global redirections affect the game until its next run.

Era.dll
  RedirectFile        (OldName, NewName); STDCALL;
  GlobalRedirectFile  (OldName, NewName); STDCALL;

Use empty NewName parameter to delete redirection. Pass both arguments empty to delete all redirections.

[+] Added support for packages of map objects. Instead of releasing the whole zeobjts.txt, create new txt with
only new items and place it under unique name in Mods\YourMod\Data\Objects folder.
  Example:
    Mods\YourMod\Data\Objects\new objects pack.txt

[+] Implemented memory blocks redirection. Era plugins which extend original structures should register each
relocation using the following function: "RedirectMemoryBlock (OldAddr, BlockSize, NewAddr)". To obtain real address of
memory block call "GetRealAddr (OldAddr)" function. UN:C command was modified to work with redirections and thus no manual call to GetRealAddr is necessary when using UN:C.

[+] Added Chinese loader support. {~color}...{~} is transformed to {...} before passing text to Chinese handler.
[+] Added option "CPUPatch" in heroes3.ini because of rare negative reports about this feature (used to slow down interface responsiveness).
[+] Added Pikeman, Orc, Dendroid Soldier and path markers from HotA project.
[+] Added alternative font editor. Credits: forum.gamevn.com.
[+] Added Autoit3 tool (Tools\Autoit\autoit.exe) and shortcut.bat for installers.
[+] Added several fixed files to hmm35wog.pac by Bes.
[+] Added apply.bat for BinMagic. Arguments: [Patch], [File] to apply to.

[*] cranim.txt was redone from scratch to allow a smoother animation and was moved to a separate mod named
"Fast Battle Animation". The mod also contains many traditionally long battle sounds which were shorted.

[*] Jim Vogan's patch for displaying primary skills over 99 is modified. The limit is +127 now.
[*] Mistakes in *.btn files do not lead to crashes, but produce error messages instead.
[*] Era SDK for Pascal was modified for better compatibility with Free Pascal Compiler. Credits: AVS.
[*] Added SaveIni function to SDK, because all write operations on ini files are cached.
[*] Improved FindClose function support. No more dangling handles opened via FindFirstW.

[-] Logging does not consume memory now.
[-] Fixed ini saving bug. ERM commands for writing in ini files updated values only in memory.
[-] Fixed y-variables corruption caused by Era engine.
[-] Fixed 4 WoG 3.58f scripts. Credits: Jim Vogan, SyDr.
[-] Fixed zmess00.txt from original WoG package.
[-] Fixed Era's bug for HE:A3 command.


Version 2.1  April, 2.
----------------------
[+] Added fixed catapult def by Valery (Salamandre). Fixes crashes when using
catapult as war machine in battle.

[+] Added fixed animated and regular WoG objects by totkotoriy.
[+] Added Plugins Manager by SyDr. "Tools\Plugins Manager".
[+] Added Mods Manager by SyDr. "Tools\Mods Manager".
[+] Fixed towers damage (defense, petrifaction and air shield bonuses).
"Mods\WoG\EraPlugins\AfterWoG\fix towers damage.bin".

[+] Added patch for displaying primary skills with over 99 values by Jim Vogan.
"Mods\WoG\EraPlugins\AfterWoG\display primary skills over 99.bin".
[+] Added 2 Era functions for checking plugins/patches existance:
  FUNCTION PluginExists (Name: STRING): BOOLEAN; STDCALL;
  FUNCTION PatchExists  (Name: STRING): BOOLEAN; STDCALL;
  
  Example:
    !!SN:L^era.dll^/?y1 Ay1/^PluginExists^/?y2 Ey2/1/^yona^;
    !!IF&v1=0:M^Plugin "yona" is not loaded!^;

[*] The patch "no real time trigger" is now off by default.
[*] Secondary skills scrolling mod scrolls skills to top on exit.   
[*] Era won't load plugins with zero size and patches with size <= 4.
[-] Fixed mistakes in triggers list. Era SDK/API/Sources were updated.
